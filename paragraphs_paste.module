<?php

/**
 * @file
 * Contains hooks for paragraphs_paste module.
 */

use Drupal\Core\Field\FieldDefinitionInterface;
use Drupal\Core\Field\FieldStorageDefinitionInterface;
use Drupal\Core\Field\WidgetInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\paragraphs\Plugin\Field\FieldWidget\ParagraphsWidget;
use Drupal\paragraphs_paste\Form\ParagraphsPasteForm;

/**
 * Implements hook_field_widget_multivalue_form_alter().
 */
function paragraphs_paste_field_widget_multivalue_paragraphs_form_alter(array &$elements, FormStateInterface $form_state, array $context) {
  \Drupal::service('class_resolver')
    ->getInstanceFromDefinition(ParagraphsPasteForm::class)
    ->formAlter($elements, $form_state, $context);
}

/**
 * Implements hook_preprocess_HOOK() for field_multiple_value_form().
 */
function paragraphs_paste_preprocess_field_multiple_value_form(&$variables) {
  if (!empty($variables['table']['#header']) && isset($variables['table']['#rows'])) {
    // Find paragraphs_paste key and move to header.
    // @see template_preprocess_field_multiple_value_form()
    foreach ($variables['table']['#rows'] as $key => $row) {
      if (!empty($row['data'][1]['data']['#paragraphs_paste'])) {
        $variables['table']['#header'][] = [
          'data' => [
            'paragraphs_paste' => $row['data'][1]['data'],
          ],
        ];
        unset($variables['table']['#rows'][$key]);
      }
    }
  }
}

/**
 * Implements hook_field_widget_third_party_settings_form().
 */
function paragraphs_paste_field_widget_third_party_settings_form(WidgetInterface $plugin, FieldDefinitionInterface $field_definition, $form_mode, $form, FormStateInterface $form_state) {
  $elements = [];

  if ($plugin instanceof ParagraphsWidget && $field_definition->getFieldStorageDefinition()->getCardinality() == FieldStorageDefinitionInterface::CARDINALITY_UNLIMITED) {
    $elements = ParagraphsPasteForm::getThirdPartyForm($plugin, $field_definition->getName());
  }

  return $elements;
}

/**
 * Implements hook_field_widget_settings_summary_alter().
 */
function paragraphs_paste_field_widget_settings_summary_alter(array &$summary, array $context) {
  if ($context['widget'] instanceof ParagraphsWidget) {
    if ($context['widget']->getThirdPartySetting('paragraphs_paste', 'enabled')) {
      $summary[] = t('Paragraphs copy & paste: enabled');
    }
  }
}
